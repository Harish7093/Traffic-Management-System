#include "esp_camera.h"
#include <WiFi.h>

// Select your camera model
#define CAMERA_MODEL_AI_THINKER // Make sure this matches your board
#include "camera_pins.h"

// WiFi credentials
const char *ssid = "12345678";
const char *password = "11223344";

void startCameraServer();

void setup() {
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  Serial.println("Booting ESP32-CAM...");

  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.frame_size = FRAMESIZE_QVGA;          // Lower frame size to reduce memory load
  config.pixel_format = PIXFORMAT_RGB565;      // Use RGB format instead of JPEG
  config.fb_location = CAMERA_FB_IN_PSRAM;     // Use PSRAM if available
  config.jpeg_quality = 12;                    // Ignored for RGB565
  config.fb_count = 1;                         // Keep buffer count low

  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("Camera init failed with error 0x%x", err);
    return;
  }

  sensor_t *s = esp_camera_sensor_get();
  Serial.printf("Detected camera PID: 0x%x\n", s->id.PID);
  s->set_brightness(s, 1);
  s->set_saturation(s, -1);
  s->set_contrast(s, 1);

  WiFi.begin(ssid, password);
  WiFi.setSleep(false);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  startCameraServer();

  Serial.print("Camera ready! Use this URL to connect: http://");
  Serial.println(WiFi.localIP());
}

void loop() {
  delay(10000); // Chill, everything handled in the background
}
